name: Build, Test and Publish

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
        - master
  workflow_dispatch:

jobs:
  build-test-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python 3.11.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.11.9
    - name: Tag with the release version
      run: |
        git tag 0.0.1
    - name: Install dependencies
      run: |
        /bin/bash ./run.sh install
    - name: Linting, Format and Other Static Checks
      run: |
        /bin/bash ./run.sh lint:ci
    - name: Build Package
      run: |
        /bin/bash ./run.sh build

    - name: Publish to TestPyPI
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        /bin/bash ./run.sh publish:test
      env:
        TEST_PYPI_TOKEN: ${{secrets.TEST_PYPI_TOKEN}}
    - name: Publish to ProdPyPI
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        /bin/bash ./run.sh publish:prod
      env:
        PROD_PYPI_TOKEN: ${{secrets.PROD_PYPI_TOKEN}}
    - name: Push Tag
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        git push origin --tags
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install pre-commit
    # - name: Analysing the code with pre-commit
    #   run: |
    #     SKIP=no-commit-to-branch pre-commit run --all-files



  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Dump secrets context
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: echo "$SECRETS_CONTEXT"
      - name: Dump Vars context
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: echo "$VARS_CONTEXT"
